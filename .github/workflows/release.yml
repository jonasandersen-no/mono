# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build release version and deploy

on:
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - uses: s4u/maven-settings-action@v2.8.0
        with:
          servers: |
            [{
                "id": "reposilite-releases",
                "username": "${{ secrets.REPOSILITE_USERNAME }}",
                "password": "${{ secrets.REPOSILITE_PASSWORD }}"
            },
            {
                "id": "reposilite-snapshots",
                "username": "${{ secrets.REPOSILITE_USERNAME }}",
                "password": "${{ secrets.REPOSILITE_PASSWORD }}"
            }]
      - name: Update version in pom.xml (Release only)
        run: mvn -B versions:set -DnewVersion=${VERSION:1} -DgenerateBackupPoms=false
        env:
          VERSION: ${{ github.event.release.tag_name }}
      - name: Build with Maven
        run: mvn clean package -T 4

      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ github.token }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  update:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - uses: s4u/maven-settings-action@v2.8.0
        with:
          servers: |
            [{
                "id": "reposilite-releases",
                "username": "${{ secrets.REPOSILITE_USERNAME }}",
                "password": "${{ secrets.REPOSILITE_PASSWORD }}"
            },
            {
                "id": "reposilite-snapshots",
                "username": "${{ secrets.REPOSILITE_USERNAME }}",
                "password": "${{ secrets.REPOSILITE_PASSWORD }}"
            }]
      - name: Bump version to next snapshot version
        run: mvn --batch-mode release:update-versions -DautoVersionSubmodules=true

      - name: Find next snapshot version
        run: echo "NEXT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Update docker-compose file
        run: |
          sed -i "s/image: ghcr.io\/notbjoggisatall\/mono:.*$/image: ghcr.io\/notbjoggisatall\/mono:${VERSION:1}/" manifests/app.yaml
        shell: bash
        env:
          VERSION: ${{ github.event.release.tag_name }}

      - name: Push changes and create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          author: github-actions[bot] <$github-actions[bot]@users.noreply.github.com>
          base: master
          branch: "update-version-to-${{ env.NEXT_VERSION }}"
          commit-message: "Update version to ${{ env.NEXT_VERSION }}"
          title: "Update version to ${{ env.NEXT_VERSION }}"
          body: "Update version to ${{ env.NEXT_VERSION }}"